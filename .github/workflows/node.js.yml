# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  builddev: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm i -g @azure/static-web-apps-cli
    - run: swa
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: builddev
        # A file, directory or wildcard pattern that describes what to upload
        path:  ./build
   
  deploydev:
    runs-on: ubuntu-latest
    needs: builddev
    environment: development
    steps:
      - run: npm i -g @azure/static-web-apps-cli
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: builddev
          # Destination path
          path: ./
      - run: ls -lRa
      - run: swa deploy -O "./" --deployment-token ${{ secrets.TOKEN }}
    
  buildprd: 
    runs-on: ubuntu-latest
    needs: deploydev
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm i -g @azure/static-web-apps-cli
    - run: swa
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: buildprd
        # A file, directory or wildcard pattern that describes what to upload
        path:  ./build
      
  deployprd:
    runs-on: ubuntu-latest
    needs: buildprd
    environment: production
    steps:
      - run: npm i -g @azure/static-web-apps-cli
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: buildprd
          # Destination path
          path: ./
      - run: swa deploy -O "./" --env "Production" --deployment-token ${{ secrets.TOKEN }}

