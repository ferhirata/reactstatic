name: FrontEnd
on: 
  workflow_dispatch:
  release:
    types: published
env:
  APP: frontend # nome da aplicação.
  IMAGE: frontend #nome da imagem
  ACR: ${{ secrets.REGISTRY_LOGIN_SERVER }}
jobs:
  builddev:
    runs-on: ubuntu-latest
    steps:    
    - id: latest
      uses: thebritican/fetch-latest-release@v2.0.0
      with:
        github_token: ${{ secrets.PAT }}    

    - name: "Checkout GitHub Action"
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.latest.outputs.tag_name }}      

    - name: Checkout private tools
      uses: actions/checkout@v3
      with:
        repository: hirata11/devops-template
        token: ${{ secrets.PAT }} 
        path: template

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'

    - run: npm i -g @azure/static-web-apps-cli

    - run: swa

    - run: zip -qq -r ./build.zip ./build

    - uses: xresloader/upload-to-github-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "build.zip;swa-cli.config.json"
        update_latest_release: true
        draft: false
        overwrite: false
        prerelease: false

  deploydev:
    runs-on: ubuntu-latest
    needs: builddev
    environment: development
    steps:

      - run: npm i -g @azure/static-web-apps-cli
      - id: latest
        uses: thebritican/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.PAT }}

      - name: Download Release Asset
        id: download_release_asset
        uses: i3h/download-release-asset@v1
        with:
          owner: hirata11
          repo: reactstatic
          tag: ${{ steps.latest.outputs.tag_name }} 
          file: build.zip 
          path: ./
          token: ${{ secrets.PAT }}
      
      - name: Download Release Asset
        id: download_release
        uses: i3h/download-release-asset@v1
        with:
          owner: hirata11
          repo: reactstatic
          tag: ${{ steps.latest.outputs.tag_name }} 
          file: swa-cli.config.json
          path: ./
          token: ${{ secrets.PAT }}

      - name: Decompress
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq ./build.zip -d ./build

      - run: swa deploy --deployment-token ${{ secrets.TOKEN }}

